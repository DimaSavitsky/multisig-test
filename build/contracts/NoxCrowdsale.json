{
  "contractName": "NoxCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiaries",
          "type": "address[]"
        }
      ],
      "name": "addManyToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "addToWhitelist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_wallet",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051606080610f08833981018060405281019080805190602001909291908051906020019092919080519060200190929190505050600183828460008311151561005b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561009757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100d357600080fd5b8260028190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505060008111151561016d57600080fd5b806004819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663355274ea6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561023b57600080fd5b505af115801561024f573d6000803e3d6000fd5b505050506040513d602081101561026557600080fd5b8101908080519060200190929190505050600781905550505050610c7a8061028e6000396000f3006080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e146100d0578063355274ea146100fb5780634042b66f146101265780634f93594514610151578063521eb273146101805780638ab1d681146101d75780638c10671c1461021a5780638da5cb5b146102555780639b19251a146102ac578063e43252d714610307578063ec8ac4d81461034a578063f2fde38b14610380578063fc0c546a146103c3575b6100ce3361041a565b005b3480156100dc57600080fd5b506100e56104e8565b6040518082815260200191505060405180910390f35b34801561010757600080fd5b506101106104ee565b6040518082815260200191505060405180910390f35b34801561013257600080fd5b5061013b6104f4565b6040518082815260200191505060405180910390f35b34801561015d57600080fd5b506101666104fa565b604051808215151515815260200191505060405180910390f35b34801561018c57600080fd5b50610195610509565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101e357600080fd5b50610218600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061052f565b005b34801561022657600080fd5b506102536004803603810190808035906020019082018035906020019190919293919293905050506105e6565b005b34801561026157600080fd5b5061026a6106e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b857600080fd5b506102ed600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070e565b604051808215151515815260200191505060405180910390f35b34801561031357600080fd5b50610348600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061072e565b005b61037e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061041a565b005b34801561038c57600080fd5b506103c1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e5565b005b3480156103cf57600080fd5b506103d861093d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008034915061042a8383610962565b610433826109ca565b905061044a826003546109e890919063ffffffff16565b60038190555061045a8382610a04565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a36104d18383610a12565b6104d9610a16565b6104e38383610a81565b505050565b60025481565b60075481565b60035481565b60006004546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058b57600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561064457600080fd5b600090505b828290508110156106e357600160066000858585818110151561066857fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080600101915050610649565b505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561078a57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561084157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561087d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156109bb57600080fd5b6109c58383610a85565b505050565b60006109e160025483610ab890919063ffffffff16565b9050919050565b600081830190508281101515156109fb57fe5b80905092915050565b610a0e8282610af0565b5050565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610a7e573d6000803e3d6000fd5b50565b5050565b610a8f8282610bfe565b600454610aa7826003546109e890919063ffffffff16565b11151515610ab457600080fd5b5050565b600080831415610acb5760009050610aea565b8183029050818382811515610adc57fe5b04141515610ae657fe5b8090505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bb457600080fd5b505af1158015610bc8573d6000803e3d6000fd5b505050506040513d6020811015610bde57600080fd5b81019080805190602001909291905050501515610bfa57600080fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610c3a57600080fd5b60008114151515610c4a57600080fd5b50505600a165627a7a7230582046dd74205ac6669142a9fd3924158306a200addd0020f5ebbdb01d11995e73ad0029",
  "deployedBytecode": "0x6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e146100d0578063355274ea146100fb5780634042b66f146101265780634f93594514610151578063521eb273146101805780638ab1d681146101d75780638c10671c1461021a5780638da5cb5b146102555780639b19251a146102ac578063e43252d714610307578063ec8ac4d81461034a578063f2fde38b14610380578063fc0c546a146103c3575b6100ce3361041a565b005b3480156100dc57600080fd5b506100e56104e8565b6040518082815260200191505060405180910390f35b34801561010757600080fd5b506101106104ee565b6040518082815260200191505060405180910390f35b34801561013257600080fd5b5061013b6104f4565b6040518082815260200191505060405180910390f35b34801561015d57600080fd5b506101666104fa565b604051808215151515815260200191505060405180910390f35b34801561018c57600080fd5b50610195610509565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101e357600080fd5b50610218600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061052f565b005b34801561022657600080fd5b506102536004803603810190808035906020019082018035906020019190919293919293905050506105e6565b005b34801561026157600080fd5b5061026a6106e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b857600080fd5b506102ed600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070e565b604051808215151515815260200191505060405180910390f35b34801561031357600080fd5b50610348600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061072e565b005b61037e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061041a565b005b34801561038c57600080fd5b506103c1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e5565b005b3480156103cf57600080fd5b506103d861093d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008034915061042a8383610962565b610433826109ca565b905061044a826003546109e890919063ffffffff16565b60038190555061045a8382610a04565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a36104d18383610a12565b6104d9610a16565b6104e38383610a81565b505050565b60025481565b60075481565b60035481565b60006004546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058b57600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561064457600080fd5b600090505b828290508110156106e357600160066000858585818110151561066857fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080600101915050610649565b505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900460ff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561078a57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561084157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561087d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156109bb57600080fd5b6109c58383610a85565b505050565b60006109e160025483610ab890919063ffffffff16565b9050919050565b600081830190508281101515156109fb57fe5b80905092915050565b610a0e8282610af0565b5050565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610a7e573d6000803e3d6000fd5b50565b5050565b610a8f8282610bfe565b600454610aa7826003546109e890919063ffffffff16565b11151515610ab457600080fd5b5050565b600080831415610acb5760009050610aea565b8183029050818382811515610adc57fe5b04141515610ae657fe5b8090505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bb457600080fd5b505af1158015610bc8573d6000803e3d6000fd5b505050506040513d6020811015610bde57600080fd5b81019080805190602001909291905050501515610bfa57600080fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610c3a57600080fd5b60008114151515610c4a57600080fd5b50505600a165627a7a7230582046dd74205ac6669142a9fd3924158306a200addd0020f5ebbdb01d11995e73ad0029",
  "sourceMap": "292:343:0:-;;;403:229;8:9:-1;5:2;;;30:1;27;20:12;5:2;403:229:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:1;524:5;531:7;540:6;1710:1:2;1702:5;:9;1694:18;;;;;;;;1745:1;1726:21;;:7;:21;;;;1718:30;;;;;;;;1780:1;1762:20;;:6;:20;;;;1754:29;;;;;;;;1797:5;1790:4;:12;;;;1817:7;1808:6;;:16;;;;;;;;;;;;;;;;;;1838:6;1830:5;;:14;;;;;;;;;;;;;;;;;;1616:233;;;485:1:4;478:4;:8;470:17;;;;;;;;499:4;493:3;:10;;;;418:90;509:10:8;501:5;;:18;;;;;;;;;;;;;;;;;;612:5:0;;;;;;;;;;;595:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;595:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;595:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;595:30:0;;;;;;;;;;;;;;;;589:3;:36;;;;403:229;;;292:343;;;;;;",
  "deployedSourceMap": "292:343:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2079:21:2;2089:10;2079:9;:21::i;:::-;292:343:0;1005:19:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:19:2;;;;;;;;;;;;;;;;;;;;;;;378:18:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;378:18:0;;;;;;;;;;;;;;;;;;;;;;;1055:24:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1055:24:2;;;;;;;;;;;;;;;;;;;;;;;617:83:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;617:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;932:21:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;932:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1230:112:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1230:112:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:185;;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:185:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;255:41:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;255:41:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;625:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;625:106:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:577:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:174:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;832:174:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:18:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;870:18:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:577;2304:17;2435:14;2324:9;2304:29;;2339:45;2360:12;2374:9;2339:20;:45::i;:::-;2452:26;2468:9;2452:15;:26::i;:::-;2435:43;;2517:24;2531:9;2517;;:13;;:24;;;;:::i;:::-;2505:9;:36;;;;2548:38;2565:12;2579:6;2548:16;:38::i;:::-;2636:12;2597:88;;2618:10;2597:88;;;2656:9;2673:6;2597:88;;;;;;;;;;;;;;;;;;;;;;;;2692:47;2715:12;2729:9;2692:22;:47::i;:::-;2746:15;:13;:15::i;:::-;2767:46;2789:12;2803:9;2767:21;:46::i;:::-;2241:577;;;:::o;1005:19::-;;;;:::o;378:18:0:-;;;;:::o;1055:24:2:-;;;;:::o;617:83:4:-;660:4;692:3;;679:9;;:16;;672:23;;617:83;:::o;932:21:2:-;;;;;;;;;;;;;:::o;1230:112:5:-;653:5:8;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;1332:5:5;1306:9;:23;1316:12;1306:23;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1230:112;:::o;916:185::-;1000:9;653:5:8;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;1012:1:5;1000:13;;995:102;1019:14;;:21;;1015:1;:25;995:102;;;1086:4;1055:9;:28;1065:14;;1080:1;1065:17;;;;;;;;;;;;;;;;;1055:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;1042:3;;;;;;;995:102;;;916:185;;;:::o;238:20:8:-;;;;;;;;;;;;;:::o;255:41:5:-;;;;;;;;;;;;;;;;;;;;;;:::o;625:106::-;653:5:8;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;722:4:5;696:9;:23;706:12;696:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;625:106;:::o;832:174:8:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;970:8;942:37;;963:5;;;;;;;;;;;942:37;;;;;;;;;;;;993:8;985:5;;:16;;;;;;;;;;;;;;;;;;832:174;:::o;870:18:2:-;;;;;;;;;;;;;:::o;1525:172:5:-;1620:12;467:9;:23;477:12;467:23;;;;;;;;;;;;;;;;;;;;;;;;;459:32;;;;;;;;1640:52;1667:12;1681:10;1640:26;:52::i;:::-;1525:172;;;:::o;5165:115:2:-;5233:7;5255:20;5270:4;;5255:10;:14;;:20;;;;:::i;:::-;5248:27;;5165:115;;;:::o;1008:123:7:-;1066:9;1091:1;1087;:5;1083:9;;1110:1;1105;:6;;1098:14;;;;;;1125:1;1118:8;;1008:123;;;;:::o;4429:132:2:-;4514:42;4529:12;4543;4514:14;:42::i;:::-;4429:132;;:::o;4814:113::-;;;:::o;5359:71::-;5399:6;;;;;;;;;;;:15;;:26;5415:9;5399:26;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5399:26:2;5359:71::o;3677:112::-;;;:::o;886:191:4:-;973:52;1000:12;1014:10;973:26;:52::i;:::-;1068:3;;1039:25;1053:10;1039:9;;:13;;:25;;;;:::i;:::-;:32;;1031:41;;;;;;;;886:191;;:::o;203:167:7:-;261:9;287:1;282;:6;278:35;;;305:1;298:8;;;;278:35;326:1;322;:5;318:9;;349:1;344;340;:5;;;;;;;;:10;333:18;;;;;;364:1;357:8;;203:167;;;;;:::o;504:150:3:-;609:5;;;;;;;;;;;595:25;;;621:12;635;595:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;595:53:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;595:53:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;595:53:3;;;;;;;;;;;;;;;;587:62;;;;;;;;504:150;;:::o;3242:157:2:-;3361:1;3337:26;;:12;:26;;;;3329:35;;;;;;;;3392:1;3378:10;:15;;3370:24;;;;;;;;3242:157;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"./NoxToken.sol\";\nimport \"zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\nimport \"zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\nimport \"zeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol\";\n\ncontract NoxCrowdsale is MintedCrowdsale, CappedCrowdsale, WhitelistedCrowdsale {\n    uint256 public cap;\n\n    constructor(\n        uint256 _rate,\n        MintableToken _token,\n        address _wallet\n    ) public\n        Crowdsale(_rate, _wallet, _token)\n        CappedCrowdsale(1)\n    {\n        cap = NoxToken(address(token)).cap();\n    }\n\n}\n",
  "sourcePath": "/Users/dmitrisavitski/EthereumProjects/Practice/multisig-test/contracts/NoxCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/multisig-test/contracts/NoxCrowdsale.sol",
    "exportedSymbols": {
      "NoxCrowdsale": [
        42
      ]
    },
    "id": 43,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/multisig-test/contracts/NoxToken.sol",
        "file": "./NoxToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 87,
        "src": "26:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 336,
        "src": "51:76:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 398,
        "src": "128:78:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "file": "zeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 499,
        "src": "207:83:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 335,
              "src": "317:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$335",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "317:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 397,
              "src": "334:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$397",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "334:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "WhitelistedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 498,
              "src": "351:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedCrowdsale_$498",
                "typeString": "contract WhitelistedCrowdsale"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "351:20:0"
          }
        ],
        "contractDependencies": [
          310,
          335,
          397,
          498,
          708
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 42,
        "linearizedBaseContracts": [
          42,
          498,
          708,
          397,
          335,
          310
        ],
        "name": "NoxCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 13,
            "name": "cap",
            "nodeType": "VariableDeclaration",
            "scope": 42,
            "src": "378:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "579:53:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "589:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 33,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "612:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$971",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$971",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 32,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "604:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 34,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "604:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31,
                            "name": "NoxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "595:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NoxToken_$86_$",
                              "typeString": "type(contract NoxToken)"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "595:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NoxToken_$86",
                            "typeString": "contract NoxToken"
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64,
                        "src": "595:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "595:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "589:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "589:36:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 22,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "524:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "531:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "540:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1098",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 310,
                  "src": "514:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$310_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "514:33:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 26,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 397,
                  "src": "556:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$397_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "556:18:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "424:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "447:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1098",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1098,
                    "src": "447:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1098",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "477:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "414:84:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:0:0"
            },
            "scope": 42,
            "src": "403:229:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 43,
        "src": "292:343:0"
      }
    ],
    "src": "0:636:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/multisig-test/contracts/NoxCrowdsale.sol",
    "exportedSymbols": {
      "NoxCrowdsale": [
        42
      ]
    },
    "id": 43,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/multisig-test/contracts/NoxToken.sol",
        "file": "./NoxToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 87,
        "src": "26:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 336,
        "src": "51:76:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 398,
        "src": "128:78:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "file": "zeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 499,
        "src": "207:83:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 335,
              "src": "317:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$335",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "317:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 397,
              "src": "334:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$397",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "334:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "WhitelistedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 498,
              "src": "351:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedCrowdsale_$498",
                "typeString": "contract WhitelistedCrowdsale"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "351:20:0"
          }
        ],
        "contractDependencies": [
          310,
          335,
          397,
          498,
          708
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 42,
        "linearizedBaseContracts": [
          42,
          498,
          708,
          397,
          335,
          310
        ],
        "name": "NoxCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 13,
            "name": "cap",
            "nodeType": "VariableDeclaration",
            "scope": 42,
            "src": "378:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "579:53:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "589:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 33,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "612:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$971",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$971",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 32,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "604:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 34,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "604:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31,
                            "name": "NoxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "595:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NoxToken_$86_$",
                              "typeString": "type(contract NoxToken)"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "595:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NoxToken_$86",
                            "typeString": "contract NoxToken"
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "cap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64,
                        "src": "595:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "595:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "589:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "589:36:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 22,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "524:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "531:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "540:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1098",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 310,
                  "src": "514:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$310_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "514:33:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 26,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 397,
                  "src": "556:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$397_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "556:18:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "424:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "447:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1098",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1098,
                    "src": "447:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1098",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "477:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "414:84:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:0:0"
            },
            "scope": 42,
            "src": "403:229:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 43,
        "src": "292:343:0"
      }
    ],
    "src": "0:636:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "1524941259111": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x87c8060c88bb14b7f7d96ddc31866f45a6a1ca84adba0a7154def48e1c0682e3"
    },
    "1524954266002": {
      "events": {},
      "links": {},
      "address": "0x1b7cfe54dfba8cdce084ec9f74dbd4cdb62b63c1",
      "transactionHash": "0x4e9dc3ab731ededc43267a60f10426e92ca072aeced7efb168fb374cf6f793c3"
    },
    "1524986121681": {
      "events": {},
      "links": {},
      "address": "0xb0c64f31feb34cf9a33c6852f55b7502ccaa5a4c",
      "transactionHash": "0x3f30f59013abb227ab7b11d57bd1cea82e4b9f525f696518daffa745da04bc0e"
    },
    "1524986964771": {
      "events": {},
      "links": {},
      "address": "0xae3b41a8d1dc89a82ed494c5691808dba61000aa",
      "transactionHash": "0xb05c02a2613676e5b22ab5b109015a4a469c8427477dad562b40e740f947f516"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-01T15:58:38.400Z"
}